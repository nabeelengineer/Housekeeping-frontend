server {
  listen 80;
  server_name _;

  root /usr/share/nginx/html;
  index index.html;

  # Increase request size limit for file uploads
  client_max_body_size 20MB;

  # Gzip compression
  gzip on;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
  gzip_min_length 1000;

  # Serve static files
  location /assets/ {
    try_files $uri =404;
    expires 30d;
    access_log off;
    add_header Cache-Control "public, no-transform";
  }

  # Proxy API requests to backend
  location /api/ {
    proxy_pass http://backend:4000/api/;
    proxy_http_version 1.1;
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_cache_bypass $http_upgrade;
    proxy_read_timeout 300s;
    
    # Handle CORS preflight
    if ($request_method = 'OPTIONS') {
      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
      add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
      add_header 'Access-Control-Max-Age' 1728000;
      add_header 'Content-Type' 'text/plain; charset=utf-8';
      add_header 'Content-Length' 0;
      return 204;
    }
  }

  # Handle file uploads
  location /uploads/ {
    proxy_pass http://backend:4000/uploads/;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
  }

  # Health check endpoint
  location /health {
    access_log off;
    add_header Content-Type text/plain;
    return 200 'OK';
  }

  # Deny access to dotfiles like .env
  location ~ /\. {
    deny all;
    access_log off;
    log_not_found off;
  }

  # React router fallback - serve index.html for all other routes
  location / {
    try_files $uri $uri/ /index.html;
    add_header Cache-Control "no-cache, no-store, must-revalidate";
    expires 0;
  }
  
  # Disable logging for favicon.ico
  location = /favicon.ico {
    access_log off;
    log_not_found off;
  }
}
